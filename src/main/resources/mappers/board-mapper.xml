<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boardMapper">
	<!-- 모든 게시글 조회 -->
	<select id="selectAll" resultType="com.helper.board.BoardDTO">
		select * from (select  tb_board.*, row_number() over (order by bo_seq desc ) as num
			from tb_board) where num between #{start} and #{end}
	</select>
	<!-- 게시글 등록 -->
	<insert id="insert" parameterType="com.helper.board.BoardDTO">
		insert into tb_board values
		(#{bo_seq}, #{mem_seq}, #{mem_nick}, #{bo_title}, #{bo_content},
		sysdate, 0)
	</insert>
	<!-- 시퀀스 번호 얻기 -->
	<select id="selectSeq" resultType="int">
		select bo_seq.nextval from
		dual
	</select>
	<!-- 시퀀스 번호로 해당 상세페이지 호출 -->
	<select id="selectOne" parameterType="int"
		resultType="com.helper.board.BoardDTO">
		select * from tb_board
		where bo_seq = #{bo_seq}
	</select>
	<!-- 게시글 삭제 -->
	<delete id="delete" parameterType="int">
		delete from tb_board
		where
		bo_seq = #{bo_seq}
	</delete>
	<!-- 조회수 -->
	<update id="updateCount" parameterType="int">
		update tb_board set
		view_count = view_count+1 where bo_seq = #{bo_seq}
	</update>
	<!-- 게시글 수정 -->
	<update id="update" parameterType="com.helper.board.BoardDTO">
		update tb_board set bo_title = #{bo_title}, bo_content =
		#{bo_content} where bo_seq = #{bo_seq}
	</update>
	<!-- 검색어로 게시글 검색 -->
	<select id="search" parameterType="map" resultType="com.helper.board.BoardDTO">
		select * from (select  tb_board.*, row_number() over (order by bo_seq desc ) as num
			from tb_board where
		 <if test="category == 'all'">
		 mem_nick like '%'||#{keyword}||'%'
		 or bo_title like '%'||#{keyword}||'%'
		 or bo_content like '%'||#{keyword}||'%'
		 </if>
		 <if test="category != 'all'">
		  ${category} like '%'||#{keyword} ||'%'
		  </if>
		  ) where num between #{start} and #{end}
	</select>
	
	<!-- 페이징 작업 -->
	<!-- 전체글의 갯수 -->
	 <select id="getListCnt" resultType="int">
	 	select count(*) from tb_board
	 </select>
	<!-- 검색한 게시물의 갯수  -->
	<select id="searchPaging" parameterType="map" resultType="int">
		select count(*) from tb_board where
		 <if test="category == 'all'">
		 mem_nick like '%'||#{keyword}||'%'
		 or bo_title like '%'||#{keyword}||'%'
		 or bo_content like '%'||#{keyword}||'%'
		 </if>
		 <if test="category != 'all'">
		  ${category} like '%'||#{keyword} ||'%'
		  </if>
	</select>
	
	<!-- 댓글 -->
	<!-- 시퀀스 번호 얻기 -->
	<select id="replySeq" resultType="int">
		select reply_seq.nextval from
		dual
	</select>
	<!-- 댓글 등록 -->
	<insert id="replyInsert" parameterType="com.helper.reply.ReplyDTO">
		insert into tb_reply values
		(#{reply_seq},#{bo_seq},#{mem_seq},#{mem_nick},#{reply_content},sysdate)
	</insert>
	<!-- 게시물의 모든 댓글 불러오기 -->
	<select id="selectReply" parameterType="int" resultType="com.helper.reply.ReplyDTO">
		select * from tb_reply 
			where bo_seq = #{bo_seq} order by 1
	</select>
	<!-- 댓글삭제 -->
	<delete id="deleteReply" parameterType="int">
		delete from tb_reply 
			where reply_seq = #{reply_seq}
	</delete>
	<!-- 공지사항 -->
	<select id="selectNotice" resultType="com.helper.admin.NoticeDTO">
	 select * from (select  tb_notice.*, row_number() over (order by notice_seq desc ) as num
			from tb_notice 
		  ) where num between 1 and 3
	</select>
</mapper>
   
   
   
   
   
   
   
   
   
   
   
   
   