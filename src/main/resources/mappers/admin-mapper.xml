<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="adminMapper">
	<!-- 블랙리스트 부분 -->
	<!-- 
		신고 목록페이지 페이징
		mem_black = N 인사람만 카운트 + 출력
	-->
	<select id="blackPage" resultType="int">
		select count(*) as totalCnt from tb_report re join tb_member me
    		on re.mem_seq = me.mem_seq
    		where me.mem_black = 'N'
	</select>
	<!-- 신고 목록 -->
	<select id="reportList" parameterType="map" resultType="com.helper.admin.ReportDTO">
		select * from (select re.*, row_number() over(order by report_seq desc) as num from tb_report re join tb_member me
   			on re.mem_seq = me.mem_seq
    		where me.mem_black = 'N')
    		where num between #{start} and #{end}
	</select>
	<!-- 신고 추가/삭제 -->
	<update id="addBleck" parameterType="int">
		update tb_member set mem_black = 'Y' 
			where mem_seq = #{mem_seq}
	</update>
	<delete id="deleteBlack" parameterType="int">
		delete from tb_report
			where mem_seq = #{mem_seq}
	</delete>
	<!-- ID로 유저찾기 -->
	<select id="searchById" parameterType="map" resultType="com.helper.admin.ReportDTO">
		select * 
			from (select re.*,row_number() over(order by report_seq desc) as num from tb_report re where mem_id like '%'||#{mem_id}||'%')
    		where num between #{start} and #{end}
	</select>
	<select id="searchPage" parameterType="String" resultType="int">
		select count(*) as totalCnt 
			from (select * from tb_report where mem_id like '%'||#{mem_id}||'%')
	</select>
	<!-- 블랙리스트 유저 -->
	<select id="selectBlacklist" parameterType="map" resultType="com.helper.member.MemberDTO">
		select *
			from (select tb_member.*, row_number() over(order by mem_seq desc) as num from tb_member where mem_black='Y')
			where num between #{start} and #{end}
	</select>
	<select id="blacklistPage" resultType="int">
		select count(*) from tb_member
			where mem_black='Y'
	</select>
	
	
	<!-- 그룹 리스트 -->
	<select id="groupList" parameterType="map" resultType="org.apache.commons.collections4.map.CaseInsensitiveMap">
		select * from (select sum(time_count) as group_count, group_seq 
			from tb_member full join tb_timer 
					using(mem_seq)
    				group by group_seq 
    				order by group_count desc) join tb_group 
    		using(group_seq)
	</select>
	<select id="groupPage" resultType="int">
		select count(*) as totalCnt from tb_group
	</select>
	<!-- 그룹 삭제시 -->
	<delete id="deleteGroup" parameterType="int">
		delete from tb_group 
			where group_seq = #{group_seq}
	</delete>
	<update id="memGroupSetNull" parameterType="int">
		update tb_member set group_seq=null 
			where group_seq = #{group_seq}
	</update>
	
	<!-- 메인페이지 top3 -->
	<select id="selectTopMem" resultType="org.apache.commons.collections4.map.CaseInsensitiveMap">
		select * from (select mem_seq,sum(time_count) as time_count 
				from tb_timer where to_char(sysdate, 'MM/dd') = to_char(time_date, 'MM/dd')
 				group by mem_seq
 				order by time_count desc) join tb_member 
 			using(mem_seq)
 			where rownum <![CDATA[<=]]> 3
	</select>
	<select id="selectTopGroup" resultType="org.apache.commons.collections4.map.CaseInsensitiveMap">
		select * from 
			(select sum(time_count) as group_count, group_seq 
			from tb_member join tb_timer 
					using(mem_seq)
    				group by group_seq 
    				order by group_count desc) join tb_group 
    		using(group_seq)
    		where rownum <![CDATA[<=]]> 3
	</select>
	
</mapper>